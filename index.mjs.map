{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns a function that applies a specified number of arguments to a provided function.\n*\n* ## Notes\n*\n* -   The returned function **always** invokes the wrapped function with a specified number of arguments, even when the returned function is provided fewer arguments. The value for the missing arguments is equal to `undefined`.\n*\n* @param {Function} fcn - input function\n* @param {NonNegativeInteger} arity - number of arguments\n* @param {*} [thisArg] - function context\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @returns {Function} function wrapper\n*\n* @example\n* function foo() {\n*     var s;\n*     var i;\n*\n*     s = 0;\n*     for ( i = 0; i < arguments.length; i++ ) {\n*         s += arguments[ i ];\n*     }\n*     return s;\n* }\n*\n* var bar = naryFunction( foo, 2 );\n*\n* var out = bar( 1, 2, 3, 4, 5, 6 );\n* // returns 3\n*/\nfunction naryFunction( fcn, arity, thisArg ) {\n\tvar fcns;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tfcns = [ nullary, unary, binary, ternary, quaternary, quinary ];\n\treturn ( arity < fcns.length ) ? fcns[ arity ] : nary;\n\n\t/**\n\t* Invokes a nullary function.\n\t*\n\t* @private\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nullary() {\n\t\treturn fcn.call( thisArg );\n\t}\n\n\t/**\n\t* Invokes a unary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction unary( x ) {\n\t\treturn fcn.call( thisArg, x );\n\t}\n\n\t/**\n\t* Invokes a binary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction binary( x, y ) {\n\t\treturn fcn.call( thisArg, x, y );\n\t}\n\n\t/**\n\t* Invokes a ternary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction ternary( x, y, z ) {\n\t\treturn fcn.call( thisArg, x, y, z );\n\t}\n\n\t/**\n\t* Invokes a quaternary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quaternary( x, y, z, w ) {\n\t\treturn fcn.call( thisArg, x, y, z, w );\n\t}\n\n\t/**\n\t* Invokes a quinary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {*} v - input value\n\t* @param {...*} [args] - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction quinary( x, y, z, w, v ) {\n\t\treturn fcn.call( thisArg, x, y, z, w, v );\n\t}\n\n\t/**\n\t* Invokes an n-ary function.\n\t*\n\t* @private\n\t* @param {*} x - input value\n\t* @param {*} y - input value\n\t* @param {*} z - input value\n\t* @param {*} w - input value\n\t* @param {*} v - input value\n\t* @param {*} t - input value\n\t* @param {...*} args - arguments\n\t* @returns {*} return value\n\t*/\n\tfunction nary( x, y, z, w, v, t ) {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [ x, y, z, w, v, t ];\n\t\tfor ( i = 6; i < arity; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn fcn.apply( thisArg, args );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = naryFunction;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a function that applies a specified number arguments to a provided function.\n*\n* @module @stdlib/utils-nary-function\n*\n* @example\n* var naryFunction = require( '@stdlib/utils-nary-function' );\n*\n* function foo() {\n*     var s;\n*     var i;\n*\n*     s = 0;\n*     for ( i = 0; i < arguments.length; i++ ) {\n*         s += arguments[ i ];\n*     }\n*     return s;\n* }\n*\n* var bar = naryFunction( foo, 2 );\n*\n* var out = bar( 1, 2, 3, 4, 5, 6 );\n* // returns 3\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["isFunction","require$$0","isNonNegativeInteger","require$$1","isPrimitive","format","require$$2","lib","fcn","arity","thisArg","fcns","TypeError","call","x","y","z","w","v","length","t","args","i","push","arguments","apply"],"mappings":";;wQAsBA,IAAIA,EAAaC,EACbC,EAAuBC,EAAmDC,YAC1EC,EAASC,EA4Jb,IChIAC,EDQA,SAAuBC,EAAKC,EAAOC,GAClC,IAAIC,EACJ,IAAMX,EAAYQ,GACjB,MAAM,IAAII,UAAWP,EAAQ,oEAAqEG,IAEnG,IAAMN,EAAsBO,GAC3B,MAAM,IAAIG,UAAWP,EAAQ,gFAAiFI,IAG/G,OAASA,GADTE,EAAO,CAUP,WACC,OAAOH,EAAIK,KAAMH,IAWlB,SAAgBI,GACf,OAAON,EAAIK,KAAMH,EAASI,IAY3B,SAAiBA,EAAGC,GACnB,OAAOP,EAAIK,KAAMH,EAASI,EAAGC,IAa9B,SAAkBD,EAAGC,EAAGC,GACvB,OAAOR,EAAIK,KAAMH,EAASI,EAAGC,EAAGC,IAcjC,SAAqBF,EAAGC,EAAGC,EAAGC,GAC7B,OAAOT,EAAIK,KAAMH,EAASI,EAAGC,EAAGC,EAAGC,IAepC,SAAkBH,EAAGC,EAAGC,EAAGC,EAAGC,GAC7B,OAAOV,EAAIK,KAAMH,EAASI,EAAGC,EAAGC,EAAGC,EAAGC,MAhFjBC,OAAWR,EAAMF,GAgGvC,SAAeK,EAAGC,EAAGC,EAAGC,EAAGC,EAAGE,GAC7B,IAAIC,EACAC,EAGJ,IADAD,EAAO,CAAEP,EAAGC,EAAGC,EAAGC,EAAGC,EAAGE,GAClBE,EAAI,EAAGA,EAAIb,EAAOa,IACvBD,EAAKE,KAAMC,UAAWF,IAEvB,OAAOd,EAAIiB,MAAOf,EAASW"}